<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.0.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xsd:schema xmlns = "DWF-Manifest:6.0"
	 targetNamespace = "DWF-Manifest:6.0"
	 xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	 version = "6.0"
	 elementFormDefault = "qualified">
	<xsd:attribute name = "href" type = "xsd:string">
		<xsd:annotation>
			<xsd:documentation>
            Documentation of this attribute can be found on
            'http://www.w3.org/TR/xlink'.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	<xsd:attribute name = "role" type = "xsd:string">
		<xsd:annotation>
			<xsd:documentation>
            Documentation of this attribute can be found on
            'http://www.w3.org/TR/xlink'.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	<xsd:attribute name = "mime" type = "xsd:string">
		<xsd:annotation>
			<xsd:documentation>
            String indicating MIME type/subtype, as described at
            'ftp://www.ietf.org/rfc/rfc2045.txt'.  
			</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	<xsd:simpleType name = "uniqueId">
		<xsd:restriction base = "xsd:string">
			<xsd:pattern value = "[0-9,A-F,a-f]{8}-[0-9,A-F,a-f]{4}-[0-9,A-F,a-f]{4}-[0-9,A-F,a-f]{4}-[0-9,A-F,a-f]{12}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name = "SimplePropertyType">
		<xsd:restriction base = "xsd:string">
			<xsd:enumeration value = "string"/>
			<xsd:enumeration value = "boolean"/>
			<xsd:enumeration value = "uriReference"/>
			<xsd:enumeration value = "timeDuration"/>
			<xsd:enumeration value = "timeInstant"/>
			<xsd:enumeration value = "date"/>
			<xsd:enumeration value = "month"/>
			<xsd:enumeration value = "year"/>
			<xsd:enumeration value = "century"/>
			<xsd:enumeration value = "recurringDate"/>
			<xsd:enumeration value = "recurringDay"/>
			<xsd:enumeration value = "float"/>
			<xsd:enumeration value = "double"/>
			<xsd:enumeration value = "long"/>
			<xsd:enumeration value = "int"/>
			<xsd:enumeration value = "short"/>
			<xsd:enumeration value = "byte"/>
			<xsd:enumeration value = "unsignedLong"/>
			<xsd:enumeration value = "unsginedInt"/>
			<xsd:enumeration value = "unsignedShort"/>
			<xsd:enumeration value = "unsignedByte"/>
			<xsd:enumeration value = "stringList"/>
			<xsd:enumeration value = "doubleList"/>
			<xsd:enumeration value = "longList"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name = "index">
		<xsd:restriction base = "xsd:unsignedInt">
			<xsd:minInclusive value = "1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:attribute name = "sectionIndex" type = "index">
		<xsd:annotation>
			<xsd:documentation>
    		The 'sectionIndex' attribute uniquely identifies a section in the manifest. 
			</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	<xsd:complexType name = "AllPropertyContent">
		<xsd:attribute name = "name" use = "required" type = "xsd:string"/>
		<xsd:attribute name = "category" type = "xsd:string"/>
	</xsd:complexType>
	<xsd:element name = "AnyProperty" type = "AllPropertyContent" abstract = "true"/>
	<xsd:complexType name = "SimplePropertyContent">
		<xsd:complexContent>
			<xsd:extension base = "AllPropertyContent">
				<xsd:attribute name = "type" default = "string" type = "SimplePropertyType"/>
				<xsd:attribute name = "units" type = "xsd:string"/>
				<xsd:attribute name = "value" use = "required" type = "xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name = "Property" type = "SimplePropertyContent" substitutionGroup = "AnyProperty">
		<xsd:annotation>
			<xsd:documentation>
            A 'Property' is intended to be a name+value pair, with optional units.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name = "Properties">
		<xsd:annotation>
			<xsd:documentation>
            The 'Properties' element represents a collection of, well, properties.
            Although the schema calls for 'Property' elements, conforming documents
            will have to use the concrete element type 'SimpleProperty'.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "AnyProperty" minOccurs = "0" maxOccurs = "unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Manifest">
		<xsd:annotation>
			<xsd:documentation>
		A Manifest documents the structure of a published package.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "Interfaces"/>
				<xsd:element ref = "Properties" minOccurs = "0"/>
				<xsd:element ref = "Sections"/>
				<xsd:element ref = "Dependencies" minOccurs = "0" maxOccurs = "unbounded"/>
			</xsd:sequence>
			<xsd:attribute name = "version" default = "1.0">
				<xsd:simpleType>
					<xsd:restriction base = "xsd:string">
						<xsd:enumeration value = "1.0"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name = "objectId" use = "required" type = "uniqueId"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Sections">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "Section" maxOccurs = "unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Source">
		<xsd:annotation>
			<xsd:documentation>
            The 'Source' element is a(n) URI that binds a specific
            source file to most any fragment of XML code.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name = "provider" type = "xsd:string">
				<xsd:annotation>
					<xsd:documentation>
                    String identifying authoring tool publishing data into the 
                    DWF, e.g. Inventor, AutoCAD, MDT.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute ref = "href" use = "required"/>
			<xsd:attribute name = "objectId" type = "uniqueId">
				<xsd:annotation>
					<xsd:documentation>
                    The 'objectId' attribute is a global unique id as
                    provided by the authoring tool.

                    It should be unique for every new document, but should persist
                    for the life of that documnt.  For example, if the authoring tool 
                    changes the document and publishes again, the id should not change.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Section">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "Source"/>
				<xsd:element ref = "Toc"/>
			</xsd:sequence>
			<xsd:attribute name = "name" use = "required" type = "xsd:string"/>
			<xsd:attribute name = "type" use = "required" type = "xsd:string"/>
			<xsd:attribute name = "title" type = "xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Toc">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "Resource" maxOccurs = "unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Resource">
		<xsd:complexType>
			<xsd:attribute ref = "role" use = "required"/>
			<xsd:attribute ref = "mime" use = "required"/>
			<xsd:attribute ref = "href" use = "required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Interface">
		<xsd:annotation>
			<xsd:documentation>
            The 'interface' element identifies a document interface supported by
            the package.  This enables a package viewers to detect any supported
            interfaces in the document.  For unsupported interfaces, the viewer
            can direct users to a website containing information on the interface
            and/or a consuming application which understands the interface.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name = "objectId" use = "required" type = "uniqueId">
				<xsd:annotation>
					<xsd:documentation>
                    The 'objectId' attribute uniquely identifies a document interface. and may
                    be used to identify a class ID or reference a locally installed control or 
                    application which understands the document interface.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name = "href" use = "required" type = "xsd:string">
				<xsd:annotation>
					<xsd:documentation>
                    The 'href' attribute is used to direct package consumers to a website
                    which contains information regarding a product or viewer which can
                    understand the document interface.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name = "name" use = "required" type = "xsd:string"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Interfaces">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "Interface" maxOccurs = "unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Dependencies">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "Dependency" maxOccurs = "unbounded"/>
			</xsd:sequence>
			<xsd:attribute ref = "sectionIndex" use = "required"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "Dependency">
		<xsd:complexType>
			<xsd:attribute ref = "sectionIndex" use = "required"/>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>